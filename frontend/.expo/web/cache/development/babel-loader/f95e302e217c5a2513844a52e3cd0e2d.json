{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Dashboard = function Dashboard() {\n  var _useState = useState(\"http10.130.159.171/testback/\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      domain = _useState2[0],\n      setDomain = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      fetched = _useState6[0],\n      setFetched = _useState6[1];\n\n  function getData() {\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(domain).then(function (res) {\n              setData(res.data);\n              setFetched(true);\n            }).catch(function (err) {}));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  if (fetched == false) {\n    getData();\n    getData();\n    getData();\n  }\n\n  console.log(data);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      children: fetched ? _jsxs(View, {\n        children: [_jsx(Text, {\n          children: data[0].name\n        }), _jsx(Text, {\n          children: data[0].email\n        }), _jsx(Text, {\n          children: data[0].age\n        }), _jsx(Text, {\n          children: data[0].date\n        })]\n      }) : _jsx(Text, {\n        children: \"Loading...\"\n      })\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["D:/Users/Desktop/BOOOKS/SEMESTER 6/SE/Project/frontend/src/react-redux/components/Dashboard.js"],"names":["StatusBar","useState","axios","Dashboard","domain","setDomain","data","setData","fetched","setFetched","getData","get","then","res","catch","err","console","log","styles","container","name","email","age","date","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;;;;AAEA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC7B,kBAA4BF,QAAQ,CAAC,8BAAD,CAApC;AAAA;AAAA,MAAOG,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAAwBJ,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOK,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA8BN,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOO,OAAP;AAAA,MAAgBC,UAAhB;;AACA,WAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACQR,KAAK,CACRS,GADG,CACCP,MADD,EAEHQ,IAFG,CAEE,UAACC,GAAD,EAAS;AACbN,cAAAA,OAAO,CAACM,GAAG,CAACP,IAAL,CAAP;AACAG,cAAAA,UAAU,CAAC,IAAD,CAAV;AACD,aALG,EAMHK,KANG,CAMG,UAACC,GAAD,EAAS,CAEf,CARG,CADR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWA,MAAIP,OAAO,IAAI,KAAf,EAAsB;AACpBE,IAAAA,OAAO;AACPA,IAAAA,OAAO;AACPA,IAAAA,OAAO;AACR;;AACDM,EAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEY,MAAM,CAACC,SAApB;AAAA,eAEI,KAAC,IAAD;AAAA,gBACGX,OAAO,GACN,MAAC,IAAD;AAAA,mBACE,KAAC,IAAD;AAAA,oBAAOF,IAAI,CAAC,CAAD,CAAJ,CAAQc;AAAf,UADF,EAEE,KAAC,IAAD;AAAA,oBAAOd,IAAI,CAAC,CAAD,CAAJ,CAAQe;AAAf,UAFF,EAGE,KAAC,IAAD;AAAA,oBAAOf,IAAI,CAAC,CAAD,CAAJ,CAAQgB;AAAf,UAHF,EAIE,KAAC,IAAD;AAAA,oBAAOhB,IAAI,CAAC,CAAD,CAAJ,CAAQiB;AAAf,UAJF;AAAA,QADM,GAQN,KAAC,IAAD;AAAA;AAAA;AATJ,MAFJ,EAeE,KAAC,SAAD;AAAW,MAAA,KAAK,EAAC;AAAjB,MAfF;AAAA,IADF;AAmBD,CAxCM;AAyCP,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport { StyleSheet, Text, View } from \"react-native\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const Dashboard = () => {\r\n  const [domain, setDomain] = useState(\"http10.130.159.171/testback/\");\r\n  const [data, setData] = useState([]);\r\n  const [fetched, setFetched] = useState(false);\r\n  async function getData() {\r\n    await axios\r\n      .get(domain)\r\n      .then((res) => {\r\n        setData(res.data);\r\n        setFetched(true);\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err);\r\n      });\r\n  }\r\n  if (fetched == false) {\r\n    getData();\r\n    getData();\r\n    getData();\r\n  }\r\n  console.log(data);\r\n  return (\r\n    <View style={styles.container}>\r\n      {\r\n        <View>\r\n          {fetched ? (\r\n            <View>\r\n              <Text>{data[0].name}</Text>\r\n              <Text>{data[0].email}</Text>\r\n              <Text>{data[0].age}</Text>\r\n              <Text>{data[0].date}</Text>\r\n            </View>\r\n          ) : (\r\n            <Text>Loading...</Text>\r\n          )}\r\n        </View>\r\n      }\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}